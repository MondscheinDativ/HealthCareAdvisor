name: PubMed Knowledge Graph Pipeline

on:
  schedule:
    - cron: '0 0 * * 2'  # 每周二 UTC 00:00（北京时间周二8:00）
  workflow_dispatch:  # 手动触发入口

env:
  R_VERSION: '4.3.2'
  NEO4J_USER: ${{ secrets.NEO4J_USER }}
  NEO4J_PASS: ${{ secrets.NEO4J_PASS }}

jobs:
  prepare-data:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 仅拉取最新提交加速

      - name: Validate data directories
        run: |
          # 检查原始数据目录
          for dir in pubmed clinical_trials; do
            target_dir="knowledge_graph/data/raw/$dir"
            if [ ! -d "$target_dir" ]; then
              echo "::error::数据目录不存在: $target_dir"
              exit 1
            fi
          done
          # 检查 PubMed CSV 文件
          if [ -z "$(find knowledge_graph/data/raw/pubmed -maxdepth 1 -type f -name '*.csv' 2>/dev/null)" ]; then
            echo "::error::PubMed 目录中无 CSV 文件"
            exit 1
          fi
          # Clinical Trials 目录警告（非强制）
          if [ -z "$(find knowledge_graph/data/raw/clinical_trials -maxdepth 1 -type f -name '*.csv' 2>/dev/null)" ]; then
            echo "::warning::Clinical Trials 目录无 CSV 文件，跳过相关处理"
          fi

  build-kg:
    needs: prepare-data
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev libssl-dev libxml2-dev \
            libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev \
            libgsl-dev \
            新增依赖：解决 libpng 和 systemfonts 问题
            libpng-tools \
            libsystemd-dev \
            fonts-dejavu-core \
            # 修复 tex 环境（如果报告需要 PDF 渲染）
            texlive-latex-extra texlive-fonts-extra

      - name: Install R packages（修复依赖链）
        run: |
          Rscript -e '
            # 0. 强制安装 systemfonts（解决 ggforce 依赖问题）
            if (!require(systemfonts, quietly = TRUE)) {
              install.packages("systemfonts", repos = "https://cloud.r-project.org", dependencies = TRUE)
            }
      
            # 1. 基础工具包
            pkgs_basic <- c("tidyverse", "neo4r", "future", "furrr", "digest", "remotes", "devtools")
      
            # 2. 图可视化 + 报告（添加 ggforce 以支持复杂可视化）
            pkgs_vis <- c("ggraph", "igraph", "ggtext", "knitr", "rmarkdown", "visNetwork", "data.table", "ggforce")
      
            # 3. 替代 disjointSet 的包 + 扩展功能
            pkgs_extra <- c("stringdist", "udpipe")
      
            # 显式检查并安装 neo4r（保持原有逻辑）
            if (!"neo4r" %in% installed.packages()) {
              install.packages("neo4r", repos = "https://cloud.r-project.org")
            }
      
            # 合并所有包（添加 ggforce）
            all_pkgs <- c(pkgs_basic, pkgs_vis, pkgs_extra)
      
            # 安装逻辑：检查并安装缺失包（添加 Ncpus 参数加速）
            installed <- installed.packages()
            to_install <- setdiff(all_pkgs, rownames(installed))
      
            if (length(to_install) > 0) {
              install.packages(
                to_install, 
                repos = "https://cloud.r-project.org", 
                dependencies = TRUE,
                Ncpus = 4  # 并行安装，加速
              )
            }
      
            # 4. 验证关键包是否能加载（增加 ggforce 和 systemfonts）
            for (pkg in c("neo4r", "ggraph", "ggforce", "systemfonts")) {
              if (!require(pkg, character.only = TRUE)) {
                stop(paste("包", pkg, "安装失败"))
              }
            }
          '
      - name: Test Neo4j connection
        run: |
          Rscript -e '
            library(neo4r)
            # 测试连接（使用 HTTP 协议，如之前修改）
            con <- neo4j_api$new(
              url = "http://localhost:7474",
              user = "${{ secrets.NEO4J_USER }}",
              password = "${{ secrets.NEO4J_PASS }}"
            )
            test_query <- "RETURN 1 AS test"
            result <- tryCatch(call_neo4j(test_query, con), error = function(e) e)
            if (inherits(result, "error")) {
              stop("Neo4j connection failed: ", result$message)
            } else {
              cat("Neo4j connection test passed.\n")
            }
          '
    
      - name: Create processed directory
        run: mkdir -p knowledge_graph/data/processed

      - name: 数据清洗 + 图谱构建（含 disjointSet 替代逻辑）
        run: |
          cd knowledge_graph/visualization
          Rscript -e "
            source('data_cleaning.R')
            # 检查 clinical_trials 数据
            if (length(list.files('knowledge_graph/data/raw/clinical_trials', pattern='*.csv')) > 0) {
              clean_clinical_trials()
            } else {
              message('无 Clinical Trials CSV 文件，跳过清洗')
            }
            
            # 调用 clean_pubmed_data + build_knowledge_graph
            clean_pubmed_data()
            build_knowledge_graph()
          "

      - name: Upload processed data
        uses: actions/upload-artifact@v4
        with:
          name: processed-data
          path: knowledge_graph/data/processed/
          retention-days: 30

  report:
    needs: build-kg
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      matrix:
        supplement: ["维生素D3", "维生素C", "锌"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download processed data
        uses: actions/download-artifact@v4
        with:
          name: processed-data
          path: knowledge_graph/data/processed/

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}

      - name: Install 报告依赖（确保 tex 环境）
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            texlive-latex-base texlive-fonts-recommended \
            texlive-fonts-extra texlive-latex-extra \
            texlive-science latexmk

      - name: 安装报告 R 包（和 build-kg 复用，实际可优化缓存）
        run: |
          Rscript -e '
            pkgs <- c("tidyverse", "ggraph", "igraph", "ggtext", 
                      "knitr", "rmarkdown", "visNetwork", "data.table")
            installed <- installed.packages()
            to_install <- setdiff(pkgs, rownames(installed))
            if (length(to_install) > 0) {
              install.packages(to_install, repos = "https://cloud.r-project.org", dependencies = TRUE)
            }
          '

      - name: 生成报告（可视化 + PDF/HTML）
        run: |
          cd knowledge_graph/visualization
          Rscript -e "
            source('graph_visualization.R')
            visualize_core_graph(focus_supplement = '${{ matrix.supplement }}')
            
            source('professional_report.R')
            generate_professional_report(supplement = '${{ matrix.supplement }}')
          "

      - name: Upload 报告
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.supplement }}-reports
          path: |
            knowledge_graph/visualization/${{ matrix.supplement }}_knowledge_graph.pdf
            knowledge_graph/visualization/${{ matrix.supplement }}_knowledge_graph.html
          retention-days: 7

  deploy:
    needs: report
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download 所有 artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: Deploy 到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./artifacts
          destination_dir: reports
          keep_files: true
